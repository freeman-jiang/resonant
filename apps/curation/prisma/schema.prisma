generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = "5"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Link {
  id           Int      @id @default(autoincrement())
  text         String
  url          String   @unique
  depth        Float    @default(0)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  page         Page?    @relation("SourceLink")
  outbound_for Page[]   @relation("OutboundLink")
}

model Page {
  id             Int      @id @default(autoincrement())
  title          String?
  date           String?
  author         String?
  content        String
  link           Link     @relation("SourceLink", fields: [linkId], references: [id])
  linkId         Int      @unique
  outbound_links Link[]   @relation("OutboundLink")
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
}

enum TaskStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model Task {
  id         Int        @id @default(autoincrement())
  priority   Float      @default(0)
  message    String
  status     TaskStatus
  payload    Json
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}
